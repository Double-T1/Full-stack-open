{"ast":null,"code":"var _jsxFileName = \"D:\\\\node\\\\Full-stack-open\\\\practice\\\\phonebook\\\\frontend\\\\src\\\\components\\\\Record.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Record = _ref => {\n  let {\n    personToShow,\n    handleDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), personToShow.map(ele => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [ele.name, \" \", ele.number, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          if (window.confirm(`Delete ${ele.name}?`)) handleDelete(e, ele.id);\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)]\n    }, ele.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["D:/node/Full-stack-open/practice/phonebook/frontend/src/components/Record.js"],"names":["Record","personToShow","handleDelete","map","ele","name","number","e","window","confirm","id"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAG,QAAkC;AAAA,MAAjC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAiC;AAC7C,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,YAAY,CAACE,GAAb,CAAiBC,GAAG,iBACnB;AAAA,iBACGA,GAAG,CAACC,IADP,OACcD,GAAG,CAACE,MADlB,eAEE;AAAQ,QAAA,OAAO,EAAGC,CAAD,IACf;AAAC,cAAIC,MAAM,CAACC,OAAP,CAAgB,UAASL,GAAG,CAACC,IAAK,GAAlC,CAAJ,EAA2CH,YAAY,CAACK,CAAD,EAAGH,GAAG,CAACM,EAAP,CAAZ;AAAuB,SADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAQN,GAAG,CAACM,EAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA,kBADF;AAeH,CAhBD;;KAAMV,M;AAmBN,eAAeA,MAAf","sourcesContent":["const Record = ({personToShow, handleDelete}) => {\r\n    return (\r\n      <>\r\n        <h2>Numbers</h2>\r\n        {personToShow.map(ele=> \r\n          <p key={ele.id}>\r\n            {ele.name} {ele.number} \r\n            <button onClick={(e) => \r\n              {if (window.confirm(`Delete ${ele.name}?`)) handleDelete(e,ele.id)}\r\n            }>\r\n              delete\r\n            </button>\r\n          </p>\r\n        )}\r\n      </>\r\n    )\r\n}\r\n\r\n\r\nexport default Record"]},"metadata":{},"sourceType":"module"}