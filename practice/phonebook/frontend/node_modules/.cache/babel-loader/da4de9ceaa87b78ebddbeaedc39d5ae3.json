{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\william\\\\Desktop\\\\node\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Button;\n\nconst Statistics = () => {};\n\n_c2 = Statistics;\n\nconst Stats = _ref2 => {\n  let {\n    text,\n    stats\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", stats]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = Stats;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = (state, setState) => () => setState(state + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(good, setGood),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(neutral, setNeutral),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick(bad, setBad),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"good\",\n      stats: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"neutral\",\n      stats: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      text: \"bad\",\n      stats: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good + neutral + bad) / 3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fmrB0CGTHg5GliZXC0zedwwuQzY=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Stats\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/william/Desktop/node/homework/src/App.js"],"names":["useState","Button","onClick","text","Statistics","Stats","stats","App","good","setGood","neutral","setNeutral","bad","setBad","handleClick","state","setState"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;;AAEA,MAAMC,MAAM,GAAG,QAAoB;AAAA,MAAnB;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,GAAmB;AACjC,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAED,OAAjB;AAAA,gBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;KAAMF,M;;AAQN,MAAMG,UAAU,GAAG,MAAM,CAExB,CAFD;;MAAMA,U;;AAIN,MAAMC,KAAK,GAAG,SAAkB;AAAA,MAAjB;AAACF,IAAAA,IAAD;AAAMG,IAAAA;AAAN,GAAiB;AAC9B,sBACE;AAAA,2BACE;AAAA,iBAAIH,IAAJ,OAAWG,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;MAAMD,K;;AASN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACY,GAAD,EAAKC,MAAL,IAAeb,QAAQ,CAAC,CAAD,CAA7B;;AAEA,QAAMc,WAAW,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB,MAAMA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAtD;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,WAAW,CAACN,IAAD,EAAMC,OAAN,CAA5B;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,WAAW,CAACJ,OAAD,EAASC,UAAT,CAA5B;AAAkD,MAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEG,WAAW,CAACF,GAAD,EAAKC,MAAL,CAA5B;AAA0C,MAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,KAAK,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,yBAAQJ,IAAI,GAACE,OAAL,GAAaE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,6BAAY,CAACJ,IAAI,GAACE,OAAL,GAAaE,GAAd,IAAmB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,8BAAcJ,IAAI,IAAEA,IAAI,GAACE,OAAL,GAAaE,GAAf,CAAL,GAA0B,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtBD;;GAAML,G;;MAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\n\nconst Button = ({onClick,text}) => {\n  return (\n    <>\n      <button onClick={onClick}>{text}</button>\n    </>\n  )\n}\n\nconst Statistics = () => {\n\n}\n\nconst Stats = ({text,stats}) => {\n  return (\n    <>\n      <p>{text} {stats}</p>\n    </>\n  )\n}\n\n\nconst App = () => {\n  const [good,setGood] = useState(0) \n  const [neutral,setNeutral] = useState(0) \n  const [bad,setBad] = useState(0) \n\n  const handleClick = (state,setState) => () => setState(state+1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={handleClick(good,setGood)} text='good'/>\n      <Button onClick={handleClick(neutral,setNeutral)} text='neutral'/>\n      <Button onClick={handleClick(bad,setBad)} text='bad'/>\n      <h2>statistics</h2>\n      <Stats text='good' stats={good} />\n      <Stats text='neutral' stats={neutral} />\n      <Stats text='bad' stats={bad} />\n      <p>all {good+neutral+bad}</p>\n      <p>average {(good+neutral+bad)/3}</p>\n      <p>positive {(good/(good+neutral+bad))*100}%</p>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}