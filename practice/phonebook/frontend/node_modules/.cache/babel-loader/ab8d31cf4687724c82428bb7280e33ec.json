{"ast":null,"code":"var _jsxFileName = \"D:\\\\node\\\\Full-stack-open\\\\practice\\\\phonebook\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Record from './components/Record';\nimport server from './services/persons';\nimport Notification from './components/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [personToShow, setToShow] = useState(persons);\n  const [newName, setNewName] = useState('type a name here');\n  const [newNumber, setNewNumber] = useState('00-0000-0000');\n  const [addedMessage, setAddedMessage] = useState(null);\n  useEffect(() => {\n    server.getAll().then(data => {\n      setPersons(data);\n    });\n  }, []);\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const isRecorded = (persons, name) => {\n    for (let p of persons) {\n      if (p.name === name) return p.id;\n    }\n\n    return -1;\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    let id = isRecorded(persons, newName);\n\n    if (id !== -1 && window.confirm(`${newName} is already in the phonebook, replace the old number with a new numebr?`)) {\n      server.update(id, {\n        name: newName,\n        number: newNumber\n      }).then(data => chainHelp(data)).then(() => {\n        setAddedMessage(`Updated the phone number of ${newName} with ${newNumber}`);\n        timer();\n      }).catch(() => {\n        setAddedMessage(`Information of ${newName} has already been removed from the server`);\n        timer();\n      });\n    } else {\n      server.insert({\n        name: newName,\n        number: newNumber\n      }).then(data => chainHelp(data)).then(() => {\n        setAddedMessage(`Added ${newName} into the phone book`);\n        timer();\n      });\n    }\n  };\n\n  const timer = () => {\n    setTimeout(() => setAddedMessage(null), 5000);\n  };\n\n  const chainHelp = data => {\n    let a = persons.filter(ele => ele.id !== data.id).concat(data);\n    setPersons(a);\n    setToShow(a);\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleFilter = e => {\n    let name = e.target.value.toLowerCase();\n\n    if (name === '') {\n      setToShow(persons);\n    } else {\n      let arr = persons.filter(p => {\n        return p.name.toLowerCase().indexOf(name) === 0;\n      });\n      setToShow(arr);\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    e.preventDefault(); //every eventual onclick function calls for rerendering automatically when clicked\n\n    server.nullify(id).then(() => {\n      setPersons(persons.filter(ele => ele.id !== id));\n      setToShow(personToShow.filter(ele => ele.id !== id));\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: addedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      handleFilter: handleFilter,\n      s: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      newName: newName,\n      newNumber: newNumber,\n      handleNameChange: handleNameChange,\n      handleNumChange: handleNumChange,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Record, {\n      personToShow: personToShow,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4+g9cKpu50N6pokeY79sYUmW1Bk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/node/Full-stack-open/practice/phonebook/frontend/src/App.js"],"names":["useState","useEffect","Filter","Form","Record","server","Notification","App","persons","setPersons","personToShow","setToShow","newName","setNewName","newNumber","setNewNumber","addedMessage","setAddedMessage","getAll","then","data","handleNameChange","e","target","value","handleNumChange","isRecorded","name","p","id","handleClick","preventDefault","window","confirm","update","number","chainHelp","timer","catch","insert","setTimeout","a","filter","ele","concat","handleFilter","toLowerCase","arr","indexOf","handleDelete","nullify","error","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Record from './components/Record'\nimport server from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons,setPersons] = useState([])\n  const [personToShow, setToShow] = useState(persons)\n  const [newName, setNewName] = useState('type a name here')\n  const [newNumber, setNewNumber] = useState('00-0000-0000')\n  const [addedMessage, setAddedMessage] = useState(null)\n\n  useEffect(() => {\n    server.getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  },[])\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const handleNumChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n  \n  const isRecorded = (persons,name) => {\n    for (let p of persons) {\n      if (p.name===name) return p.id\n    }\n    return -1\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    let id = isRecorded(persons,newName)\n    if (id !== -1\n      && window.confirm(`${newName} is already in the phonebook, replace the old number with a new numebr?`)\n    ) {\n      server.update(id,{name: newName, number: newNumber})\n        .then(data => chainHelp(data))\n        .then(() => {\n          setAddedMessage(`Updated the phone number of ${newName} with ${newNumber}`)\n          timer()\n        })\n        .catch (() => {\n          setAddedMessage(`Information of ${newName} has already been removed from the server`)\n          timer()\n        })\n    } else {\n      server.insert({name: newName, number: newNumber})\n        .then(data => chainHelp(data))\n        .then(() => {\n          setAddedMessage(`Added ${newName} into the phone book`)\n          timer()\n        })\n    }\n  }\n  const timer = () => {setTimeout(() => setAddedMessage(null), 5000)}\n  const chainHelp = (data) => {\n    let a = persons.filter(ele => ele.id!==data.id).concat(data)\n    setPersons(a)\n    setToShow(a)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleFilter = (e) => {\n    let name = e.target.value.toLowerCase()\n    if (name === '') {\n      setToShow(persons)\n    } else {\n      let arr = persons.filter(p => {\n        return p.name.toLowerCase().indexOf(name) === 0\n      })\n      setToShow(arr)\n    }\n  }\n\n  const handleDelete = (e,id) => {\n    e.preventDefault() //every eventual onclick function calls for rerendering automatically when clicked\n    server.nullify(id)\n      .then(() => {\n        setPersons(persons.filter(ele => ele.id !== id))\n        setToShow(personToShow.filter(ele => ele.id !== id))\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={addedMessage}/>\n      <Filter handleFilter={handleFilter}s/> \n      <Form newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumChange={handleNumChange} handleClick={handleClick}/>\n      <Record personToShow={personToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}